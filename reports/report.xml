[{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/block-navigation.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/prettify.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/sorter.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/app.component.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/components/toolbar/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/components/toolbar/toolbar.component.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/components/user-card/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/components/user-card/user-card.component.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/services/detail-access.guard.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/services/github-search.service.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/services/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/state-manager/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/common/state-manager/state.store.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/pages/detail-page/detail-page.component.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/pages/detail-page/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/pages/search-page/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/app/pages/search-page/search-page.component.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/polyfills.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/coverage/nuvolar-test/src/test.ts.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/e2e/protractor.conf.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: The keyword 'const' is reserved","line":5,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-check\n// Protractor configuration file, see link for more information\n// https://github.com/angular/protractor/blob/master/lib/config.ts\n\nconst { SpecReporter, StacktraceOption } = require('jasmine-spec-reporter');\n\n/**\n * @type { import(\"protractor\").Config }\n */\nexports.config = {\n  allScriptsTimeout: 11000,\n  specs: [\n    './src/**/*.e2e-spec.ts'\n  ],\n  capabilities: {\n    browserName: 'chrome'\n  },\n  directConnect: true,\n  baseUrl: 'http://localhost:4200/',\n  framework: 'jasmine',\n  jasmineNodeOpts: {\n    showColors: true,\n    defaultTimeoutInterval: 30000,\n    print: function() {}\n  },\n  onPrepare() {\n    require('ts-node').register({\n      project: require('path').join(__dirname, './tsconfig.json')\n    });\n    jasmine.getEnv().addReporter(new SpecReporter({\n      spec: {\n        displayStacktrace: StacktraceOption.PRETTY\n      }\n    }));\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/e2e/src/app.e2e-spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/e2e/src/app.po.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/karma.conf.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/app-routing.module.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/app.component.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/app.component.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/app.component.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/app.module.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":4,"column":29,"nodeType":"Literal","messageId":"wrongQuotes","endLine":4,"endColumn":45,"fix":{"range":[145,161],"text":"'@angular/forms'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":6,"column":34,"nodeType":"Literal","messageId":"wrongQuotes","endLine":6,"endColumn":56,"fix":{"range":[276,298],"text":"'@angular/flex-layout'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":7,"column":34,"nodeType":"Literal","messageId":"wrongQuotes","endLine":7,"endColumn":56,"fix":{"range":[333,355],"text":"'@angular/common/http'"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"// Core imports\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MaterialModule } from './common/modules/material/material.module';\n\n// Internal imports\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DetailPageModule } from './pages/detail-page/detail-page.module';\nimport { SearchPageModule } from './pages/search-page/search-page.module';\nimport { NG_ENTITY_SERVICE_CONFIG } from '@datorama/akita-ng-entity-service';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { environment } from '../environments/environment';\nimport { ComponentsModule } from './common/components/components.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    MaterialModule,\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    DetailPageModule,\n    SearchPageModule,\n    ComponentsModule,\n    environment.production ? [] : AkitaNgDevtools.forRoot(),\n    AkitaNgRouterStoreModule.forRoot(),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [{ provide: NG_ENTITY_SERVICE_CONFIG, useValue: { baseUrl: 'https://jsonplaceholder.typicode.com' }}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/components/components.module.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":3,"column":35,"nodeType":"Literal","messageId":"wrongQuotes","endLine":3,"endColumn":68,"fix":{"range":[124,157],"text":"'./user-card/user-card.component'"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserCardComponent } from \"./user-card/user-card.component\";\nimport { MaterialModule } from '../modules/material/material.module';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\n@NgModule({\n  declarations: [UserCardComponent, ToolbarComponent],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    UserCardComponent,\n    ToolbarComponent\n  ]\n})\nexport class ComponentsModule { }\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/components/toolbar/toolbar.component.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/components/toolbar/toolbar.component.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/components/toolbar/toolbar.component.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/components/user-card/user-card.component.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/components/user-card/user-card.component.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/components/user-card/user-card.component.ts","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":19,"column":15,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":19,"endColumn":16,"fix":{"range":[504,505],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { GitHubUser } from '../../interfaces/github-data';\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss']\n})\nexport class UserCardComponent implements OnInit {\n  @Input() user: GitHubUser;\n  @Input() content = false;\n  @Output() clickFunction = new EventEmitter<GitHubUser>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  emitCallback () {\n    this.clickFunction.emit(this.user);\n  }\n\n}\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/interfaces/github-data.ts","messages":[{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":2,"column":20,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":2,"endColumn":20,"fix":{"range":[48,49],"text":";"}},{"ruleId":"@typescript-eslint/naming-convention","severity":2,"message":"Property name `avatar_url` must match one of the following formats: camelCase","line":3,"column":5,"nodeType":"Identifier","messageId":"doesNotMatchFormat","endLine":3,"endColumn":15},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":3,"column":25,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":3,"endColumn":25,"fix":{"range":[73,74],"text":";"}},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":4,"column":18,"nodeType":"Identifier","messageId":"expectedSemi","endLine":4,"endColumn":18,"fix":{"range":[92,92],"text":";"}},{"ruleId":"@typescript-eslint/naming-convention","severity":2,"message":"Property name `public_repos` must match one of the following formats: camelCase","line":5,"column":5,"nodeType":"Identifier","messageId":"doesNotMatchFormat","endLine":5,"endColumn":17},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":5,"column":27,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":5,"endColumn":27,"fix":{"range":[118,119],"text":";"}},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":6,"column":24,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":6,"endColumn":24,"fix":{"range":[142,143],"text":";"}},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":7,"column":28,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":7,"endColumn":28,"fix":{"range":[171,171],"text":";"}},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":11,"column":18,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":11,"endColumn":18,"fix":{"range":[221,222],"text":";"}},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":12,"column":22,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":12,"endColumn":22,"fix":{"range":[243,244],"text":";"}},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":13,"column":25,"nodeType":"Punctuator","messageId":"expectedSemi","endLine":13,"endColumn":25,"fix":{"range":[268,269],"text":";"}},{"ruleId":"@typescript-eslint/naming-convention","severity":2,"message":"Property name `html_url` must match one of the following formats: camelCase","line":14,"column":5,"nodeType":"Identifier","messageId":"doesNotMatchFormat","endLine":14,"endColumn":13},{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":14,"column":21,"nodeType":"Identifier","messageId":"expectedSemi","endLine":14,"endColumn":21,"fix":{"range":[290,290],"text":";"}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":15,"column":2,"nodeType":"Program","messageId":"missing","fix":{"range":[292,292],"text":"\n"}}],"errorCount":14,"warningCount":0,"fixableErrorCount":11,"fixableWarningCount":0,"source":"export interface GitHubUser {\n    login?: string,\n    avatar_url?: string,\n    name?: string\n    public_repos?: number,\n    followers?: number,\n    repoList?: GitHubRepo[]\n}\n\nexport interface GitHubRepo {\n    name: string,\n    private: boolean,\n    description: string,\n    html_url: string\n}","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/modules/material/material.module.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":9,"column":31,"nodeType":"Literal","messageId":"wrongQuotes","endLine":9,"endColumn":55,"fix":{"range":[479,503],"text":"'@angular/material/list'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":10,"column":42,"nodeType":"Literal","messageId":"wrongQuotes","endLine":10,"endColumn":78,"fix":{"range":[546,582],"text":"'@angular/material/progress-spinner'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":12,"column":35,"nodeType":"Literal","messageId":"wrongQuotes","endLine":12,"endColumn":64,"fix":{"range":[684,713],"text":"'@angular/material/grid-list'"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from \"@angular/material/grid-list\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatGridListModule\n  ],\n  exports: [\n    CommonModule,\n    MatCardModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatGridListModule\n  ]\n})\nexport class MaterialModule { }\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/services/detail-access.guard.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/services/detail-access.guard.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":4,"column":23,"nodeType":"Literal","messageId":"wrongQuotes","endLine":4,"endColumn":40,"fix":{"range":[210,227],"text":"'@datorama/akita'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":5,"column":44,"nodeType":"Literal","messageId":"wrongQuotes","endLine":5,"endColumn":74,"fix":{"range":[272,302],"text":"'../state-manager/state.store'"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Query } from \"@datorama/akita\";\nimport { SessionState, SessionStore } from \"../state-manager/state.store\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailAccessGuardGuard extends Query<SessionState> implements CanActivate {\n  constructor(\n    protected store: SessionStore,\n    private router: Router) {\n\n    super(store);\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.getValue().user ? true : this.router.navigate(['/search']);\n  }\n\n}\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/services/github-search.service.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/services/github-search.service.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":28,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":50,"fix":{"range":[71,93],"text":"'@angular/common/http'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":3,"column":32,"nodeType":"Literal","messageId":"wrongQuotes","endLine":3,"endColumn":38,"fix":{"range":[126,132],"text":"'rxjs'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":4,"column":58,"nodeType":"Literal","messageId":"wrongQuotes","endLine":4,"endColumn":74,"fix":{"range":[191,207],"text":"'rxjs/operators'"}},{"ruleId":"jsdoc/newline-after-description","severity":2,"message":"There must be a newline after the description of the JSDoc block.","line":13,"column":null,"nodeType":"Block","endLine":13,"endColumn":null,"fix":{"range":[372,503],"text":"/**\n     * Creates an instance of GithubSearchService.\n     *\n     * @param {HttpClient} http\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @param.","line":14,"column":null,"nodeType":"Block","endLine":14,"endColumn":null,"fix":{"range":[372,503],"text":"/**\n     * Creates an instance of GithubSearchService.\n     * @param http\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @param.","line":25,"column":null,"nodeType":"Block","endLine":25,"endColumn":null,"fix":{"range":[569,865],"text":"/**\n     * Function called whenever the user fills the search input\n     * It includes some operators to prevent the app from http-request-flooding the API server\n     *\n     * @param value\n     * @return {Observable<GitHubUser>}\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":26,"column":40,"nodeType":"Program","messageId":"trailingSpace","endLine":26,"endColumn":41,"fix":{"range":[819,820],"text":""}},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @return.","line":26,"column":null,"nodeType":"Block","endLine":26,"endColumn":null,"fix":{"range":[569,865],"text":"/**\n     * Function called whenever the user fills the search input\n     * It includes some operators to prevent the app from http-request-flooding the API server\n     *\n     * @param value\n     * @return\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"no-shadow","severity":2,"message":"'value' is already declared in the upper scope on line 29 column 12.","line":32,"column":23,"nodeType":"Identifier","messageId":"noShadow","endLine":32,"endColumn":28},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @param.","line":40,"column":null,"nodeType":"Block","endLine":40,"endColumn":null,"fix":{"range":[1067,1224],"text":"/**\n     * Gets GitHub user information\n     *\n     * @param username\n     * @return {Observable<any>}\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":41,"column":33,"nodeType":"Program","messageId":"trailingSpace","endLine":41,"endColumn":34,"fix":{"range":[1178,1179],"text":""}},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @return.","line":41,"column":null,"nodeType":"Block","endLine":41,"endColumn":null,"fix":{"range":[1067,1224],"text":"/**\n     * Gets GitHub user information\n     *\n     * @param username\n     * @return\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`.","line":49,"column":43,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedObjectBlock","endLine":57,"endColumn":14,"fix":{"range":[1493,1800],"text":"({\n                    login: response?.login,\n                    avatar_url: response?.avatar_url,\n                    name: response?.name,\n                    public_repos: response?.public_repos,\n                    followers: response?.followers\n                })"}},{"ruleId":"@typescript-eslint/naming-convention","severity":2,"message":"Property name `avatar_url` must match one of the following formats: camelCase","line":52,"column":21,"nodeType":"Identifier","messageId":"doesNotMatchFormat","endLine":52,"endColumn":31},{"ruleId":"@typescript-eslint/naming-convention","severity":2,"message":"Property name `public_repos` must match one of the following formats: camelCase","line":54,"column":21,"nodeType":"Identifier","messageId":"doesNotMatchFormat","endLine":54,"endColumn":33},{"ruleId":"@typescript-eslint/semi","severity":2,"message":"Missing semicolon.","line":56,"column":18,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":57,"endColumn":1,"fix":{"range":[1786,1786],"text":";"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":61,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":61,"endColumn":5,"fix":{"range":[1820,1824],"text":""}},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @param.","line":65,"column":null,"nodeType":"Block","endLine":65,"endColumn":null,"fix":{"range":[1829,2034],"text":"/**\n     * Gets GitHub repository info list for the user passed by parameter\n     *\n     * @param username\n     * @return {*}  {Observable<GitHubRepo>}\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @return.","line":66,"column":null,"nodeType":"Block","endLine":66,"endColumn":null,"fix":{"range":[1829,2034],"text":"/**\n     * Gets GitHub repository info list for the user passed by parameter\n     *\n     * @param username\n     * @return  {Observable<GitHubRepo>}\n     * @memberof GithubSearchService\n     */"}},{"ruleId":"@typescript-eslint/naming-convention","severity":2,"message":"Property name `html_url` must match one of the following formats: camelCase","line":81,"column":25,"nodeType":"Identifier","messageId":"doesNotMatchFormat","endLine":81,"endColumn":33},{"ruleId":"@typescript-eslint/semi","severity":2,"message":"Missing semicolon.","line":82,"column":23,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":83,"endColumn":1,"fix":{"range":[2645,2645],"text":";"}},{"ruleId":"@typescript-eslint/semi","severity":2,"message":"Missing semicolon.","line":83,"column":19,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":84,"endColumn":1,"fix":{"range":[2664,2664],"text":";"}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":89,"column":2,"nodeType":"Program","messageId":"missing","fix":{"range":[2732,2732],"text":"\n"}}],"errorCount":23,"warningCount":0,"fixableErrorCount":19,"fixableWarningCount":0,"source":"import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, debounceTime, map, switchMap } from \"rxjs/operators\";\nimport { GitHubRepo, GitHubUser } from '../interfaces/github-data';\n\n@Injectable()\nexport class GithubSearchService {\n\n    apiUrl = 'https://api.github.com';\n\n    /**\n     * Creates an instance of GithubSearchService.\n     * @param {HttpClient} http\n     * @memberof GithubSearchService\n     */\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    /**\n     * Function called whenever the user fills the search input\n     * It includes some operators to prevent the app from http-request-flooding the API server\n     *\n     * @param {Observable<string>} value\n     * @return {Observable<GitHubUser>} \n     * @memberof GithubSearchService\n     */\n    search(value: Observable<string>): Observable<GitHubUser> {\n        return value.pipe(\n            debounceTime(400),\n            switchMap(value => this.getUserInfo(value))\n        );\n    }\n\n\n    /**\n     * Gets GitHub user information\n     *\n     * @param {string} username\n     * @return {Observable<any>} \n     * @memberof GithubSearchService\n     */\n    getUserInfo(username: string): Observable<GitHubUser> {\n        return this.http.get(`${this.apiUrl}/users/${username}`).pipe(\n            // Catching and managing error\n            catchError(err => of([])\n            ),\n            map((response: GitHubUser) => {\n                return {\n                    login: response?.login,\n                    avatar_url: response?.avatar_url,\n                    name: response?.name,\n                    public_repos: response?.public_repos,\n                    followers: response?.followers\n                }\n            })\n        );\n    }\n\n    \n    /**\n     * Gets GitHub repository info list for the user passed by parameter\n     *\n     * @param {string} username\n     * @return {*}  {Observable<GitHubRepo>}\n     * @memberof GithubSearchService\n     */\n    getUserRepos(username: string): Observable<GitHubRepo[]> {\n        return this.http.get(`${this.apiUrl}/users/${username}/repos`).pipe(\n            // Catching and managing error\n            catchError(err => of([])\n            ),\n            map((response: GitHubRepo[]) => {\n                const repoList = [];\n                response.forEach(item => {\n                    repoList.push({\n                        name: item.name,\n                        private: item.private,\n                        description: item.description,\n                        html_url: item.html_url\n                    })\n                })\n                return repoList;\n            })\n        );\n    }\n\n}","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/common/state-manager/state.store.ts","messages":[{"ruleId":"@typescript-eslint/member-delimiter-style","severity":2,"message":"Expected a semicolon.","line":6,"column":21,"nodeType":"Identifier","messageId":"expectedSemi","endLine":6,"endColumn":21,"fix":{"range":[207,207],"text":";"}},{"ruleId":"prefer-arrow/prefer-arrow-functions","severity":2,"message":"Use const or class constructors instead of named functions","line":9,"column":8,"nodeType":"FunctionDeclaration","endLine":13,"endColumn":2},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":32,"column":2,"nodeType":"Program","messageId":"missing","fix":{"range":[701,701],"text":"\n"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { Injectable } from '@angular/core';\nimport { Store, StoreConfig } from '@datorama/akita';\nimport { GitHubUser } from '../interfaces/github-data';\n\nexport interface SessionState {\n    user: GitHubUser\n}\n\nexport function createInitialState(): SessionState {\n    return {\n        user: null\n    };\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n@StoreConfig({ name: 'session' })\nexport class SessionStore extends Store<SessionState> {\n    constructor() {\n        super(createInitialState());\n    }\n}\n\n@Injectable()\nexport class SessionService {\n    constructor(private sessionStore: SessionStore) { }\n\n    updateUser(newUser: GitHubUser) {\n        this.sessionStore.update({ user: newUser });\n    }\n}","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/detail-page/detail-page-routing.module.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":4,"column":40,"nodeType":"Literal","messageId":"wrongQuotes","endLine":4,"endColumn":83,"fix":{"range":[200,243],"text":"'../../common/services/detail-access.guard'"}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":18,"column":41,"nodeType":"Program","messageId":"missing","fix":{"range":[500,500],"text":"\n"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DetailPageComponent } from './detail-page.component';\nimport { DetailAccessGuardGuard } from \"../../common/services/detail-access.guard\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [DetailAccessGuardGuard],\n    component: DetailPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DetailPageRoutingModule { }","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/detail-page/detail-page.component.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/detail-page/detail-page.component.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/detail-page/detail-page.component.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":23,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":40,"fix":{"range":[73,90],"text":"'@datorama/akita'"}},{"ruleId":"@typescript-eslint/semi","severity":2,"message":"Missing semicolon.","line":17,"column":34,"nodeType":"ClassProperty","messageId":"missingSemi","endLine":18,"endColumn":1,"fix":{"range":[689,689],"text":";"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { Component, OnInit } from '@angular/core';\nimport { Query } from \"@datorama/akita\";\nimport { SessionState, SessionStore } from '../../common/state-manager/state.store';\nimport { Observable } from 'rxjs';\nimport { GitHubRepo, GitHubUser } from 'src/app/common/interfaces/github-data';\nimport { GithubSearchService } from 'src/app/common/services/github-search.service';\n\n@Component({\n  selector: 'app-detail-page',\n  templateUrl: './detail-page.component.html',\n  styleUrls: ['./detail-page.component.scss'],\n  providers: [GithubSearchService]\n})\nexport class DetailPageComponent extends Query<SessionState> implements OnInit {\n\n  user: GitHubUser;\n  userObs: Observable<GitHubUser>\n\n  constructor(\n    protected store: SessionStore,\n    private searchSrv: GithubSearchService\n  ) {\n    super(store);\n    this.user = this.getValue().user;\n  }\n\n  ngOnInit(): void {\n    this.searchSrv.getUserRepos(this.user?.login).subscribe(data => {\n      this.user.repoList = data;\n    });\n  }\n\n}\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/detail-page/detail-page.module.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":3,"column":32,"nodeType":"Literal","messageId":"wrongQuotes","endLine":3,"endColumn":79,"fix":{"range":[121,168],"text":"'../../common/modules/material/material.module'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":4,"column":37,"nodeType":"Literal","messageId":"wrongQuotes","endLine":4,"endColumn":62,"fix":{"range":[206,231],"text":"'./detail-page.component'"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from \"../../common/modules/material/material.module\";\nimport { DetailPageComponent } from \"./detail-page.component\";\nimport { DetailPageRoutingModule } from './detail-page-routing.module';\nimport { ComponentsModule } from 'src/app/common/components/components.module';\n\n@NgModule({\n  declarations: [\n    DetailPageComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    DetailPageRoutingModule,\n    ComponentsModule\n  ]\n})\nexport class DetailPageModule { }\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/search-page/search-page-routing.module.ts","messages":[{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":16,"column":41,"nodeType":"Program","messageId":"missing","fix":{"range":[373,373],"text":"\n"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchPageComponent } from './search-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchPageRoutingModule { }","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/search-page/search-page.component.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/search-page/search-page.component.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/search-page/search-page.component.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":6,"column":32,"nodeType":"Literal","messageId":"wrongQuotes","endLine":6,"endColumn":72,"fix":{"range":[299,339],"text":"'../../common/state-manager/state.store'"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":31,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":31,"endColumn":3,"fix":{"range":[928,930],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":34,"column":5,"nodeType":"Program","messageId":"trailingSpace","endLine":34,"endColumn":6,"fix":{"range":[1008,1009],"text":""}},{"ruleId":"jsdoc/no-types","severity":2,"message":"Types are not permitted on @param.","line":35,"column":null,"nodeType":"Block","endLine":35,"endColumn":null,"fix":{"range":[933,1074],"text":"/**\n   * Triggers GitHub user search and maps the content to an object\n   *\n   * @param event\n   * @memberof SearchPageComponent\n   */"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":39,"column":25,"nodeType":"Program","messageId":"trailingSpace","endLine":39,"endColumn":28,"fix":{"range":[1136,1139],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":47,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":47,"endColumn":3,"fix":{"range":[1305,1307],"text":""}}],"errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { GitHubUser } from 'src/app/common/interfaces/github-data';\nimport { GithubSearchService } from '../../common/services/github-search.service';\nimport { SessionService } from \"../../common/state-manager/state.store\";\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n  providers: [GithubSearchService, SessionService]\n})\nexport class SearchPageComponent {\n\n  searchField$ = new Subject<string>();\n  user: GitHubUser;\n  loading = false;\n\n  constructor(\n    private searchSrv: GithubSearchService,\n    private router: Router,\n    private sessionSrv: SessionService\n  ) {\n    this.searchSrv.search(this.searchField$)\n      .subscribe(result => {\n        this.user = result;\n        this.loading = false;\n      });\n  }\n  \n  /**\n   * Triggers GitHub user search and maps the content to an object\n   * \n   * @param {any} event\n   * @memberof SearchPageComponent\n   */\n  onSearchChange(event: any): void {\n    this.loading = true;   \n    this.searchField$.next(event.target.value);\n  }\n\n  goDetail(user: GitHubUser) {\n    this.sessionSrv.updateUser(user);\n    this.router.navigate(['/detail']);\n  }\n  \n}\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/app/pages/search-page/search-page.module.ts","messages":[{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":3,"column":32,"nodeType":"Literal","messageId":"wrongQuotes","endLine":3,"endColumn":79,"fix":{"range":[121,168],"text":"'../../common/modules/material/material.module'"}},{"ruleId":"@typescript-eslint/quotes","severity":2,"message":"Strings must use singlequote.","line":4,"column":37,"nodeType":"Literal","messageId":"wrongQuotes","endLine":4,"endColumn":62,"fix":{"range":[206,231],"text":"'./search-page.component'"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from \"../../common/modules/material/material.module\";\nimport { SearchPageComponent } from \"./search-page.component\";\nimport { SearchPageRoutingModule } from './search-page-routing.module';\nimport { ComponentsModule } from 'src/app/common/components/components.module';\n\n@NgModule({\n  declarations: [\n    SearchPageComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    SearchPageRoutingModule,\n    ComponentsModule\n  ]\n})\nexport class SearchPageModule { }\n","usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/environments/environment.prod.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/environments/environment.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/index.html","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/main.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/polyfills.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]},{"filePath":"/Users/jreyes/Documents/GitHub Repos/nuvolar-test/src/test.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"id-blacklist","replacedBy":["id-denylist"]}]}]